name: Deploy to Cloud Run
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'package.json'
      - 'bun.lock'
      - 'tsconfig.json'
      - 'Dockerfile'
      - '.github/workflows/**'

permissions:
  contents: read      # auth アクション推奨
  id-token: write     # 後で WIF に変えるなら必須

env:
  REGION: asia-northeast1
  SERVICE: x-fact-checker

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # 1) 認証（鍵 JSON を使う最短手順）
    - uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}
        project_id:        ${{ secrets.PROJECT_ID }}

    # 2) gcloud インストール
    - uses: google-github-actions/setup-gcloud@v2

    # 3) Artifact Registry repository作成
    - name: Create Artifact Registry repository if not exists
      run: |
        if gcloud artifacts repositories describe "$SERVICE" --location="$REGION" --quiet >/dev/null 2>&1; then
          echo "Repository $SERVICE already exists, skipping creation"
        else
          echo "Creating Artifact Registry repository: $SERVICE"
          gcloud artifacts repositories create "$SERVICE" \
            --repository-format=docker \
            --location="$REGION" \
            --description="Docker repository for production environment"
          echo "Repository $SERVICE created successfully"
        fi

    # 4) ビルド & デプロイ
    - name: Build + Deploy
      run: |
        IMAGE="$REGION-docker.pkg.dev/${{ secrets.PROJECT_ID }}/$SERVICE/app:latest"
        gcloud builds submit --tag "$IMAGE" --quiet
        gcloud run deploy "$SERVICE" \
          --image "$IMAGE" \
          --region "$REGION" \
          --allow-unauthenticated \
          --service-account="github-deployer@team-mirai-463005.iam.gserviceaccount.com" \
          --set-env-vars="ENV=prod" \
          --update-secrets="OPENAI_API_KEY=OPENAI_API_KEY:latest,\
            X_BEARER_TOKEN=X_BEARER_TOKEN:latest,\
            VECTOR_STORE_ID=VECTOR_STORE_ID:latest,\
            SLACK_BOT_TOKEN=SLACK_BOT_TOKEN:latest,\
            SLACK_SIGNING_SECRET=SLACK_SIGNING_SECRET:latest,\
            SLACK_CHANNEL_ID=SLACK_CHANNEL_ID:latest,\
            X_APP_KEY=X_APP_KEY:latest,\
            X_APP_SECRET=X_APP_SECRET:latest,\
            X_ACCESS_TOKEN=X_ACCESS_TOKEN:latest,\
            X_ACCESS_SECRET=X_ACCESS_SECRET:latest,\
            CRON_SECRET=CRON_SECRET:latest"
